
<!doctype html>
<html lang="en">
  <head>
    <title>second page</title>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
   
        <title>Title</title>
        <!-- Required meta tags -->
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    
        <!-- Bootstrap CSS -->
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    
     
          
        <!-- Optional JavaScript -->
        <!-- jQuery first, then Popper.js, then Bootstrap JS -->
        <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
     
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">

    <link href="/assets/img/favicon.png" rel="icon">
    <link href="/assets/img/apple-touch-icon.png" rel="apple-touch-icon">

    
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Raleway:300,300i,400,400i,500,500i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i" rel="stylesheet">
   
    <link href="/assets/css/style.css" rel="stylesheet">
    <link href="/assets/compheader.css" rel="stylesheet">
  
            <script>
                var temp =localStorage.getItem("offline_quiz");// question array of quiz
                var quiz = JSON.parse(temp);
                 var userId =  "<%= username %>";
                 var quizId =  "<%= quiz_id %>";
                var time =localStorage.getItem("timer");// overall timer
                var ot = JSON.parse(time);

                let Qresp = [];
                var response = {
                    participant_id : userId,
                    quiz_id : quizId,
                    question_resp :  [],
                    total_marks: 0,
                    score : 0
                    
                    
                };



                let question_response = {
                    question_id : 0,
                    response_answer_id : 0,
                    isCorrect : false,
                    response_answer_statement : ""
                };

               //console.log("userid = "+userId+" quiz_id = "+quizId);
                //console.log("temp = "+temp+" time = "+time);

                var index=-1;
                var answer ="";
                var interval = 0;
                var total={
                    marks:0,
                    correct : 0,
                };
               //enter the time in seconds here
              
              
                function convertSeconds(s){
                    var hour = Math.floor(s/3600);
                    var minute = Math.floor(s/60);
                    var second = s % 60;
                    return (minute).toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false})+':'+(second).toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false});
                }
               
                async function timer(){
                    var counter=0;
                   await LoadQuestion();
                  //  let q_timer = quiz[index].question_timer;
                     var timeleft = ot;
                    console.log("hello ",timeleft);
                    let time = document.getElementById("timer");
                     interval =  setInterval(()=>{
                        let ts = timeleft-counter
                        //console.log(counter);
                        time.innerHTML=(convertSeconds(ts));
                        if(timeleft==counter ){
                            clearInterval(interval);
                            counter=0;
                            document.getElementById("complete").innerHTML = "congrats quiz completed";
                            document.getElementById("timer").innerHTML= "total Score : "+total.marks;
                            document.getElementById("attempted").innerHTML= "score :"+(total.correct-1)+"/"+quiz.length; 
                            document.getElementById("main_frame").style.visibility= "hidden";
                            setTimeout(()=>{
                                console.log("question doen"); 
                            },3000)
                          }
                        counter+=1;
                    }, 1000);
        
                }
               

                let correct = false;

                async function handleClick(e){
                   
                    var ele =e;
                    var a= e.getAttribute("value");
                   //console.log("question  = "+JSON.stringify(quiz[index]));
                   question_response.question_id = quiz[index].options[0].question_id;
                   console.log("option id = "+JSON.stringify(quiz[index].options[0].question_id));
                   question_response.response_answer_id = a;
                   question_response.correct_id = answer;
                   if(a==answer){
                       correct = true;
                        ele.setAttribute("class","alert alert-primary bg-success");
                       document.getElementById("status").innerHTML= "correct";
                        var mp = quiz[index].max_points;
                        total.marks=total.marks+mp;
                        total.correct = total.correct+1;
                        document.getElementById("status").setAttribute("class","btn btn-primary d-flex align-items-center btn-success")
                        document.getElementById("attempted").innerHTML= "score :"+total.correct+"/"+quiz.length;
                        question_response.isCorrect = correct;
                        console.log(question_response);
                        Qresp.push(JSON.stringify(question_response));
                        setTimeout(async()=>{
                            ele.setAttribute("class","alert alert-primary");
                            //console.log("inside in set timeout",a);
                            await LoadQuestion();
                         },1000)

                   }
                   else{
                       correct = false;
                    ele.setAttribute("class","alert alert-primary bg-danger");
                    document.getElementById("status").innerHTML= "incorrect";
                    document.getElementById("status").setAttribute("class","btn btn-primary d-flex align-items-center btn-danger")
                    //console.log(" inside login ");
                   // document.getElementById("timer").innerHTML= " incorrect answer";
                    document.getElementById("attempted").innerHTML= "score :"+(total.correct)+"/"+quiz.length;
                    question_response.isCorrect = correct;
                   //console.log("question_response = "+question_response);
                   Qresp.push(JSON.stringify(question_response));
                    //console.log("qresponse = "+Qresp); 
                    setTimeout(async()=>{
                        await ele.setAttribute("class","alert alert-primary");
                        console.log( "hi", await ele.setAttribute("class","alert alert-primary"));
                               await LoadQuestion();
                              
                        },1000)
                     
                   }
                   if(index==quiz.length-1){
                        clearInterval(interval);
                        document.getElementById("complete").innerHTML = "congrats quiz completed";
                        document.getElementById("timer").innerHTML= "total Score : "+total.marks;
                        document.getElementById("attempted").innerHTML= "score :"+total.correct+"/"+quiz.length; 
                        document.getElementById("main_frame").style.visibility= "hidden";  
                        document.getElementById("question_type").style.visibility= "hidden";  
                        
                        let end = document.getElementById("endQuiz").cloneNode(true);
                        let parent = document.getElementById("main_frame");
                        document.getElementById("question_type").style.display= "none";   

                        end.style.visibility = "visible";
                        parent.appendChild(end);

                        response.total_marks = total.marks;
                        response.score = total.correct;
                        response.question_resp = Qresp;
                        console.log("response = "+JSON.stringify(response));

                       
                   }  
                }

                async function  LoadQuestion(){
                     index+=1;
                    if(index < quiz.length){
                        if(quiz[index].question_type =="MCQ"){
                            answer = quiz[index].correct_option;
                            let question = quiz[index].question_statement;
                            let option1 = quiz[index].options[0].option_id;
                            let option1_state = quiz[index].options[0].option_statement;
                            
                            let option2 = quiz[index].options[1].option_id;
                            let option2_state = quiz[index].options[1].option_statement;

                            let option3 = quiz[index].options[2].option_id;
                            let option3_state = quiz[index].options[2].option_statement;

                            let option4 = quiz[index].options[3].option_id;
                            let option4_state = quiz[index].options[3].option_statement;

                            
                            document.getElementById("1").innerHTML = option1_state;
                            document.getElementById("2").innerHTML = option2_state;
                            document.getElementById("3").innerHTML = option3_state;
                            document.getElementById("4").innerHTML = option4_state;
                            document.getElementById("question").innerHTML =question;

                            //adding the values
                            //console.log(option1);
                            document.getElementById("1").setAttribute('name',option1) ;
                            document.getElementById("1").setAttribute("value",option1);
                            document.getElementById("2").setAttribute("value",option2);
                            document.getElementById("3").setAttribute("value",option3);
                            document.getElementById("4").setAttribute("value",option4);
                            //console.log("pratik",document.getElementById("1").getAttribute("value"));
                    
                            }
                        else{
                            document.getElementById("question_type").style.visibility= "hidden";
                            let input = document.getElementById("fill");
                            var fill =document.getElementById("question_type");
                            var type = document.getElementById("filling").cloneNode(true);
                            var parent = document.getElementById("main_frame");
                            console.log(input);
                            let length = (quiz[index].options[0].option_statement).length;
                            console.log(length);
                            input.setAttribute("maxlength",length);
                            console.log(input);
                            parent.appendChild(type);

                        }
                    }  
                }

                async function handlefillAnswer(e){
                    let question_response = {
                    question_id : 0,
                    response_answer_id : 0,
                    isCorrect : false,
                    response_answer_statement : ""
                };
                    var response_statement = document.getElementById("fill").value;
                    var ele = e.parentElement;

                        question_response.response_answer_statement= response_statement; // back-end
                        question_response.question_id = quiz[index].options[0].question_id;
                        question_response.correct_id =0;
                        //question_response.question_id = quiz[index].question_id;
                       
                        //console.log("qresponse = "+Qresp);
                   // question_response.correct_statement = quiz[index].options[0].option_statement;
                    if(response_statement === quiz[index].options[0].option_statement||
                    response_statement === quiz[index].options[1].option_statement||
                    response_statement === quiz[index].options[2].option_statement){
                        correct = true;
                        document.getElementById("status").innerHTML= "correct";
                        document.getElementById("status").setAttribute("class","btn btn-primary d-flex align-items-center btn-success");                       
                        var mp = quiz[index].max_points;
                        total.marks=total.marks+mp;
                        total.correct = total.correct+1;
                        document.getElementById("attempted").innerHTML= "score :"+total.correct+"/"+quiz.length;
                        question_response.isCorrect = correct;
                        console.log(question_response);
                        //console.log("question_response = "+JSON.stringify(question_response));
                        Qresp.push(JSON.stringify(question_response));
                        setTimeout(async()=>{
                            ele.parentNode.removeChild(ele);
                            document.getElementById("question_type").style.visibility= "visible";
                            await LoadQuestion();
                         },1000)
                    }  
                    else{
                        correct = false;
                        document.getElementById("status").innerHTML= "incorrect";
                        document.getElementById("status").setAttribute("class","btn btn-primary d-flex align-items-center btn-danger")
                        document.getElementById("attempted").innerHTML= "score :"+(total.correct)+"/"+quiz.length;
                        question_response.isCorrect = correct;
                        console.log(question_response);
                        console.log("question_response = "+JSON.stringify(question_response));
                        Qresp.push(JSON.stringify(question_response));
                        setTimeout(async()=>{
                            ele.parentNode.removeChild(ele);
                            document.getElementById("question_type").style.visibility= "visible";
                                await LoadQuestion(); 
                            },1000)
                        } 
                        
                        if(index==quiz.length-1){
                        clearInterval(interval);
                        
                        document.getElementById("complete").innerHTML = "congrats quiz completed";
                        document.getElementById("timer").innerHTML= "total Score : "+total.marks;
                        document.getElementById("attempted").innerHTML= "score :"+total.correct+"/"+quiz.length; 
                        document.getElementById("main_frame").style.visibility= "hidden";  
                        document.getElementById("question_type").style.display= "none";   
                        
                        let end = document.getElementById("endQuiz").cloneNode(true);
                        let parent = document.getElementById("main_frame");
                        end.style.visibility = "visible";
                        parent.appendChild(end);

                        
                        
                        
                        response.total_marks = total.marks;
                        response.score = total.correct;
                        response.question_resp = Qresp;
                        console.log("response = "+JSON.stringify(response));
                    }   
                    }

                   async function sendResponse(){
                       console.log(response);
                       localStorage.setItem('responses',JSON.stringify(response));
                        let URL =  `http://localhost:3000/api/v1/insertResponse`;
                        console.log("response object data = "+response);
                        const resp = await fetch(URL, {
                            method : "POST" ,
                                    headers : {	   
                                        "Content-Type": "Application/Json",
                                        "Access-Control-Allow-Origin": "*",
                                    },
                                    body : JSON.stringify(response)
                                })
                            .then(response => {
                                //console.log(response.json());
                                window.location.href="/api/v1";
                            })
                            .catch(error => console.log('Authorization failed : ' + error.message));
                    }
                
                

            </script>
            <style>
                body {
    background-color: #eee
}

label.radio {
    cursor: pointer
}
input {
      border: none;
      width: 10.5ch;
      background: 
        repeating-linear-gradient(90deg, 
            dimgrey 0, 
            dimgrey 1ch, 
            transparent 0, 
            transparent 1.5ch) 
          0 100%/100% 2px no-repeat;
      color: dimgrey;
      font: 5ch consolas, monospace;
      letter-spacing: .5ch;
    }
    input:focus {
      outline: none;
      color: dodgerblue;
    }
label.radio input {
    position: absolute;
    top: 0;
    left: 0;
    visibility: hidden;
    pointer-events: none
}

label.radio span {
    padding: 4px 0px;
    border: 1px solid black;
    display: inline-block;
    color: black;
    width: 100px;
    text-align: center;
    border-radius: 3px;
    margin-top: 7px;
    text-transform: uppercase
}

/* label.radio input:checked+span {
    border-color: red;
    background-color: red;
    color: #fff
} */

.ans {
    margin-left: 36px !important
}

.btn:focus {
    outline: 0 !important;
    box-shadow: none !important
}

.btn:active {
    outline: 0 !important;
    box-shadow: none !important
}
.bg-image {
                content: '';
                /* The image used */

                /* Add the blur effect */

                /* Full height */

                /* Center and scale the image nicely */
                background-image: url(/assets/img/bg/bgQuestion.jpg);
                background-position: center;
                background-size: cover;
                background-repeat: repeat-y;
            }
            </style>
</head>
     <body  onload="timer()" class="bg-image"  style="margin: 0;">
        <div class="conatiner mt-5 ">
            <!-- navbar component--> 
    <%- include('partials/navbar') %>
   
        <div class="row " style="height:2vh"></div>
        <div class="container mt-2" style="margin-top:500px;">
            <div class="d-flex mt-5 justify-content-center row">
                <div class="col-md-10 col-lg-10">
                    <div class="border">
                        <div class="question bg-white p-2 border-bottom">
                            <div class="d-flex flex-row justify-content-between align-items-center mcq">
                                <h4 id="complete">MCQ Quiz</h4><span ><h3 id="timer"></h3> </span>
                            </div>
                        </div>
                        <div class="question bg-white p-2 border-bottom" id="main_frame" style="visibility: visible;">
                            <div class="d-flex flex-row align-items-center question-title">
                                <h3 class="text-danger">Q.</h3>
                                <h5 class="mt-1 ml-2" id="question">Which of the following country has largest population?</h5>
                            </div>

                            <div id="question_type" style="visibility: visible;">
                                <div class="ans ml-2 ">
                                    <label class="radio "> <input type="radio"  >
    
                                         <div  id="1"  onclick="handleClick(this)" name="" value="option 1" class="alert alert-primary w-100" role="alert">
                                   This is a primary alert—check it out!
                                  </div>
                                </label>
                            </div>
                           
                             
                             
                                <div class="ans ml-2">
                                    <label class="radio">
                                         <input type="radio"name="brazil" value="brazil"> 
                                         <div  id="2"  onclick="handleClick(this)" name="" value="" class="alert alert-primary" role="alert">
                                    This is a primary alert—check it out!</div>
                                    </label>
                                </div>
                          
                            
                                    <div class="ans ml-2">
                                        <label class="radio"> <input type="radio" name="brazil" value="brazil"> 
                                            <div  id="3"  onclick="handleClick(this)" name="" value="option 1" class="alert alert-primary" role="alert">
                                                This is a primary alert—check it out!</div>
                                        </label>
                                    </div>
                            
                                <div class="ans ml-2">
                                    <label class="radio"> <input type="radio"  name="brazil" value="brazil">
                                        <div  id="4"  onclick="handleClick(this)"  name="" value="" class="alert alert-primary" role="alert">
                                            This is a primary alert—check it out!</div>
                                    </label>
                                </div>
                            </div>
                            
                                 
                        </div>
                        <div class="d-flex flex-row justify-content-between align-items-center p-2 bg-white">
                            <span>last question status  <span><button class="btn btn-primary " type="button"id="status" >
                                   
                            </button></span></span>
                           
                            <button class="btn btn-primary border-success align-items-center btn-success" id="attempted" type="button">score : <i class="fa fa-angle-right ml-2"></i></button></div>
                    </div>
                </div>
            </div>
        </div>


        <div id="scoresheet" style="visibility: hidden;">

            <h2>Your answer is correct </h2>
            
            <div >
                <h2>your score is :</h2>  <h2 id="score"> </h2>
                <button onclick="timer()"> next question</button>      
            </div>

        </div>
        <div id="wrong" style="visibility: hidden;">

            <h2>Your answer is incorrect </h2>
             
            <div id="filling" >
                <input type="text"   id="fill"  maxlength='7' >
              <button onclick="handlefillAnswer(this)"> next question</button> 
                </div>

        </div></div>
        <div id = "endQuiz" class = "col" style="visibility: hidden;">
            <div class="row">
                <div class="alert alert-success">
                    Congrats!!! You have successfully completed the Quiz.
                </div>
            </div>         
            <div>
                <div>Click on the done button to submit the responses</div>
                <div class = "btn btn-outline-info" onclick="sendResponse()">
                    Done
                </div>
            </div>
            
        </div>
        </body>
    </html>
      
    <!-- Optional JavaScript -->
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
  </body>
</html>